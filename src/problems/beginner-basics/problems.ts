import type { Problem } from "../../types";

export const problems: Problem[] = [
  {
    id: "say-hello",
    title: "Say Hello",
    description: "Write a function that takes a name as a string and returns a greeting message.",
    category: "Beginner Basics",
    inputs: [{ id: "name", label: "Name", type: "text", defaultValue: "World" }],
    buttonText: "Greet",
  },
  {
    id: "sum-two-numbers",
    title: "Sum Two Numbers",
    description: "Write a function that takes two numbers as input and returns their sum.",
    category: "Beginner Basics",
    inputs: [
      { id: "num1", label: "First Number", type: "number", defaultValue: 5 },
      { id: "num2", label: "Second Number", type: "number", defaultValue: 10 },
    ],
    buttonText: "Calculate Sum",
  },
  {
    id: "subtract-numbers",
    title: "Subtract Two Numbers",
    description: "Write a function that returns the difference of two numbers.",
    category: "Beginner Basics",
    inputs: [
        { id: "num1", label: "First Number", type: "number", defaultValue: 20 },
        { id: "num2", label: "Second Number", type: "number", defaultValue: 8 },
    ],
    buttonText: "Subtract",
  },
  {
    id: "simple-multiplication",
    title: "Multiply Two Numbers",
    description: "Write a function that takes two numbers and returns their product.",
    category: "Beginner Basics",
    inputs: [
        { id: "num1", label: "First Number", type: "number", defaultValue: 7 },
        { id: "num2", label: "Second Number", type: "number", defaultValue: 6 },
    ],
    buttonText: "Multiply",
  },
  {
    id: "simple-division",
    title: "Divide Two Numbers",
    description: "Write a function that divides the first number by the second. Handle division by zero.",
    category: "Beginner Basics",
    inputs: [
        { id: "num1", label: "Dividend", type: "number", defaultValue: 100 },
        { id: "num2", label: "Divisor", type: "number", defaultValue: 10 },
    ],
    buttonText: "Divide",
  },
  {
    id: "find-remainder",
    title: "Find the Remainder",
    description: "Write a function that finds the remainder of a division using the modulo operator (%).",
    category: "Beginner Basics",
    inputs: [
      { id: "dividend", label: "Dividend", type: "number", defaultValue: 10 },
      { id: "divisor", label: "Divisor", type: "number", defaultValue: 3 },
    ],
    buttonText: "Find Remainder",
  },
  {
    id: "exponentiation",
    title: "Exponentiation",
    description: "Calculate the result of a number raised to the power of another number.",
    category: "Beginner Basics",
    inputs: [
      { id: "base", label: "Base", type: "number", defaultValue: 2 },
      { id: "exponent", label: "Exponent", type: "number", defaultValue: 3 },
    ],
    buttonText: "Calculate Power",
  },
  {
    id: "increment-number",
    title: "Increment a Number",
    description: "Write a function that takes a number and returns the number incremented by 1.",
    category: "Beginner Basics",
    inputs: [{ id: "num", label: "Number", type: "number", defaultValue: 5 }],
    buttonText: "Increment",
  },
  {
    id: "decrement-number",
    title: "Decrement a Number",
    description: "Write a function that takes a number and returns the number decremented by 1.",
    category: "Beginner Basics",
    inputs: [{ id: "num", label: "Number", type: "number", defaultValue: 5 }],
    buttonText: "Decrement",
  },
  {
    id: "string-length",
    title: "Get String Length",
    description: "Write a function to find the number of characters in a given string.",
    category: "Beginner Basics",
    inputs: [{ id: "str", label: "Your String", type: "text", defaultValue: "JavaScript" }],
    buttonText: "Get Length",
  },
  {
    id: "get-first-character",
    title: "Get First Character",
    description: "Write a function to get the first character of a string.",
    category: "Beginner Basics",
    inputs: [{ id: "str", label: "String", type: "text", defaultValue: "Hello" }],
    buttonText: "Get First Char",
  },
  {
    id: "get-last-character",
    title: "Get Last Character",
    description: "Write a function to get the last character of a string.",
    category: "Beginner Basics",
    inputs: [{ id: "str", label: "String", type: "text", defaultValue: "World" }],
    buttonText: "Get Last Char",
  },
  {
    id: "concatenate-strings",
    title: "Concatenate Strings",
    description: "Write a function that combines two strings into one.",
    category: "Beginner Basics",
    inputs: [
      { id: "str1", label: "First String", type: "text", defaultValue: "Hello, " },
      { id: "str2", label: "Second String", type: "text", defaultValue: "World!" },
    ],
    buttonText: "Combine",
  },
  {
    id: "number-to-string",
    title: "Convert Number to String",
    description: "Write a function that explicitly converts a number to its string representation.",
    category: "Beginner Basics",
    inputs: [{ id: "num", label: "Number", type: "number", defaultValue: 123 }],
    buttonText: "Convert",
  },
  {
    id: "string-to-number",
    title: "Convert String to Number",
    description: "Write a function that converts a string representation of a number into an actual number.",
    category: "Beginner Basics",
    inputs: [{ id: "str", label: "String Number", type: "text", defaultValue: "45.5" }],
    buttonText: "Convert to Number",
  },
  {
    id: "get-data-type",
    title: "Get Data Type",
    description: "Write a function that takes any value and returns its data type using the `typeof` operator.",
    category: "Beginner Basics",
    inputs: [{ id: "value", label: "Input Value", type: "text", defaultValue: "hello" }],
    buttonText: "Get Type",
  },
  {
    id: "boolean-true-false",
    title: "Return a Boolean",
    description: "Write a function that returns the boolean value `true`.",
    category: "Beginner Basics",
    inputs: [],
    buttonText: "Return True",
  },
  {
    id: "strict-equality",
    title: "Strict Equality (===)",
    description: "Compare two values for strict equality (both value and type must match).",
    category: "Beginner Basics",
    inputs: [
      { id: "val1", label: "Value 1", type: "text", defaultValue: "5" },
      { id: "val2", label: "Value 2", type: "text", defaultValue: "5" },
    ],
    buttonText: "Compare ===",
  },
  {
    id: "loose-equality",
    title: "Loose Equality (==)",
    description: "Compare two values for loose equality (values are coerced to the same type before comparison).",
    category: "Beginner Basics",
    inputs: [
      { id: "val1", label: "Value 1", type: "text", defaultValue: "5" },
      { id: "val2", label: "Value 2", type: "text", defaultValue: "5" },
    ],
    buttonText: "Compare ==",
  },
  {
    id: "is-greater-than",
    title: "Greater Than Operator",
    description: "Write a function that returns true if the first number is greater than the second, and false otherwise.",
    category: "Beginner Basics",
    inputs: [
      { id: "num1", label: "First Number", type: "number", defaultValue: 10 },
      { id: "num2", label: "Second Number", type: "number", defaultValue: 5 },
    ],
    buttonText: "Check >",
  },
  {
    id: "logical-and",
    title: "Logical AND (&&)",
    description: "Write a function that checks if a person is old enough AND has a license to drive.",
    category: "Beginner Basics",
    inputs: [
      { id: "age", label: "Age", type: "number", defaultValue: 20 },
      { id: "hasLicense", label: "Has License? (true/false)", type: "text", defaultValue: "true" },
    ],
    buttonText: "Check Eligibility",
  },
  {
    id: "logical-or",
    title: "Logical OR (||)",
    description: "Write a function that checks if a user is either an Admin OR the content owner to allow editing.",
    category: "Beginner Basics",
    inputs: [
      { id: "isAdmin", label: "Is Admin? (true/false)", type: "text", defaultValue: "false" },
      { id: "isOwner", label: "Is Owner? (true/false)", type: "text", defaultValue: "true" },
    ],
    buttonText: "Check Permission",
  },
  {
    id: "logical-not",
    title: "Logical NOT (!)",
    description: "Write a function that inverts a boolean value using the NOT operator.",
    category: "Beginner Basics",
    inputs: [{ id: "value", label: "Input Boolean (true/false)", type: "text", defaultValue: "true" }],
    buttonText: "Invert Value",
  },
  {
    id: "check-is-even",
    title: "Check if Number is Even",
    description: "Write a function that takes a number and returns true if it is even, and false otherwise.",
    category: "Beginner Basics",
    inputs: [{ id: "num", label: "Number", type: "number", defaultValue: 8 }],
    buttonText: "Check Even/Odd",
  },
  {
    id: "simple-if-else",
    title: "Check Voting Age",
    description: 'Write a function that returns "Can vote" if age is 18 or over, and "Cannot vote" otherwise.',
    category: "Beginner Basics",
    inputs: [{ id: "age", label: "Age", type: "number", defaultValue: 21 }],
    buttonText: "Check Eligibility",
  },
  {
    id: "check-is-positive",
    title: "Check Positive, Negative, or Zero",
    description: "Write a function to check if a number is positive, negative, or zero.",
    category: "Beginner Basics",
    inputs: [{ id: "num", label: "Number", type: "number", defaultValue: -5 }],
    buttonText: "Check Number",
  },
  {
    id: "grade-calculator",
    title: "Simple Grade Calculator",
    description: "Assign a letter grade (A, B, C, D, F) based on a score using if-else if-else.",
    category: "Beginner Basics",
    inputs: [{ id: "score", label: "Score (0-100)", type: "number", defaultValue: 85 }],
    buttonText: "Calculate Grade",
  },
  {
    id: "ternary-operator-check",
    title: "Check with Ternary Operator",
    description: "Use the ternary operator to check if a user is logged in and return an appropriate message.",
    category: "Beginner Basics",
    inputs: [{ id: "isLoggedIn", label: "Is Logged In? (true/false)", type: "text", defaultValue: "true" }],
    buttonText: "Check Status",
  },
  {
    id: "is-leap-year",
    title: "Check for Leap Year",
    description: "Write a function to determine if a given year is a leap year. A year is a leap year if it is divisible by 4, except for end-of-century years, which must be divisible by 400.",
    category: "Beginner Basics",
    inputs: [{ id: "year", label: "Year", type: "number", defaultValue: 2024 }],
    buttonText: "Check Year",
  },
  {
    id: "max-of-three",
    title: "Find the Largest of Three Numbers",
    description: "Write a function that takes three numbers and returns the largest one.",
    category: "Beginner Basics",
    inputs: [
      { id: "num1", label: "First Number", type: "number", defaultValue: 10 },
      { id: "num2", label: "Second Number", type: "number", defaultValue: 25 },
      { id: "num3", label: "Third Number", type: "number", defaultValue: 15 },
    ],
    buttonText: "Find Largest",
  },
  {
    id: "switch-statement-day",
    title: "Day of the Week",
    description: "Use a switch statement to return the day of the week from a number (1=Sunday, 2=Monday, etc.).",
    category: "Beginner Basics",
    inputs: [{ id: "dayNum", label: "Day Number (1-7)", type: "number", defaultValue: 3 }],
    buttonText: "Get Day",
  },
  {
    id: "simple-for-loop",
    title: "Simple For Loop",
    description: "Use a for loop to create a string of numbers from 0 up to (but not including) a given number, separated by dashes.",
    category: "Beginner Basics",
    inputs: [{ id: "num", label: "Loop until", type: "number", defaultValue: 5 }],
    buttonText: "Generate Sequence",
  },
  {
    id: "for-loop-sum",
    title: "Sum Numbers with a For Loop",
    description: "Use a for loop to calculate the sum of all numbers from 1 up to a given number.",
    category: "Beginner Basics",
    inputs: [{ id: "num", label: "Sum up to", type: "number", defaultValue: 10 }],
    buttonText: "Calculate Sum",
  },
  {
    id: "for-loop-countdown",
    title: "Countdown with a For Loop",
    description: "Use a for loop to generate a countdown string from a given number down to 1.",
    category: "Beginner Basics",
    inputs: [{ id: "start", label: "Start Countdown from", type: "number", defaultValue: 5 }],
    buttonText: "Start Countdown",
  },
  {
    id: "simple-while-loop",
    title: "Simple While Loop",
    description: "Use a while loop to generate a string of numbers, incrementing by 2, until the number is greater than 10.",
    category: "Beginner Basics",
    inputs: [{ id: "start", label: "Start Number", type: "number", defaultValue: 0 }],
    buttonText: "Run While Loop",
  },
  {
    id: "access-array-element",
    title: "Access Array Element",
    description: "Write a function that returns the element at a specific index from an array.",
    category: "Beginner Basics",
    inputs: [
      { id: "arr", label: "Array (comma-separated)", type: "text", defaultValue: "apple,banana,cherry" },
      { id: "index", label: "Index to Access", type: "number", defaultValue: 1 },
    ],
    buttonText: "Get Element",
  },
  {
    id: "get-array-length",
    title: "Get Array Length",
    description: "Write a function that returns the total number of elements in an array.",
    category: "Beginner Basics",
    inputs: [{ id: "arr", label: "Array (comma-separated)", type: "text", defaultValue: "a,b,c,d" }],
    buttonText: "Get Length",
  },
  {
    id: "string-to-uppercase",
    title: "Convert String to Uppercase",
    description: "Write a function that converts an entire string to its uppercase equivalent.",
    category: "Beginner Basics",
    inputs: [{ id: "str", label: "Input String", type: "text", defaultValue: "hello world" }],
    buttonText: "To Uppercase",
  },
  {
    id: "string-to-lowercase",
    title: "Convert String to Lowercase",
    description: "Write a function that converts an entire string to its lowercase equivalent.",
    category: "Beginner Basics",
    inputs: [{ id: "str", label: "Input String", type: "text", defaultValue: "HELLO WORLD" }],
    buttonText: "To Lowercase",
  },
  {
    id: "string-includes",
    title: "Check if String Includes Substring",
    description: "Write a function that checks if a string contains a specific substring.",
    category: "Beginner Basics",
    inputs: [
      { id: "mainStr", label: "Main String", type: "text", defaultValue: "The quick brown fox" },
      { id: "subStr", label: "Substring to Find", type: "text", defaultValue: "quick" },
    ],
    buttonText: "Check for Substring",
  },
  {
    id: "area-of-rectangle",
    title: "Area of a Rectangle",
    description: "Write a function that calculates the area of a rectangle given its width and height.",
    category: "Beginner Basics",
    inputs: [
      { id: "width", label: "Width", type: "number", defaultValue: 10 },
      { id: "height", label: "Height", type: "number", defaultValue: 5 },
    ],
    buttonText: "Calculate Area",
  },
  {
    id: "celsius-to-fahrenheit",
    title: "Celsius to Fahrenheit",
    description: "Write a function to convert a temperature from Celsius to Fahrenheit. Formula: (C * 9/5) + 32.",
    category: "Beginner Basics",
    inputs: [{ id: "celsius", label: "Temperature in Celsius", type: "number", defaultValue: 20 }],
    buttonText: "Convert",
  },
  {
    id: "fahrenheit-to-celsius",
    title: "Fahrenheit to Celsius",
    description: "Write a function to convert a temperature from Fahrenheit to Celsius. Formula: (F - 32) * 5/9.",
    category: "Beginner Basics",
    inputs: [{ id: "fahrenheit", label: "Temperature in Fahrenheit", type: "number", defaultValue: 68 }],
    buttonText: "Convert",
  },
  {
    id: "check-null",
    title: "Check for Null",
    description: "Write a function that checks if a given value is `null`.",
    category: "Beginner Basics",
    inputs: [{ id: "value", label: 'Input value (try typing "null")', type: "text", defaultValue: "hello" }],
    buttonText: "Check Null",
  },
  {
    id: "check-undefined",
    title: "Check for Undefined",
    description: "Write a function that checks if a given value is `undefined`.",
    category: "Beginner Basics",
    inputs: [{ id: "value", label: 'Input value (try typing "undefined")', type: "text", defaultValue: "123" }],
    buttonText: "Check Undefined",
  },
  {
    id: "string-repeat",
    title: "Repeat a String",
    description: "Write a function that repeats a string a specified number of times.",
    category: "Beginner Basics",
    inputs: [
      { id: "str", label: "String to Repeat", type: "text", defaultValue: "abc" },
      { id: "count", label: "Number of Times", type: "number", defaultValue: 3 },
    ],
    buttonText: "Repeat",
  },
  {
    id: "string-slicing",
    title: "Slice a String",
    description: "Write a function that extracts a portion of a string using `slice()`.",
    category: "Beginner Basics",
    inputs: [
      { id: "str", label: "Original String", type: "text", defaultValue: "JavaScript" },
      { id: "start", label: "Start Index", type: "number", defaultValue: 0 },
      { id: "end", label: "End Index (exclusive)", type: "number", defaultValue: 4 },
    ],
    buttonText: "Slice String",
  },
  {
    id: "array-join",
    title: "Join Array Elements",
    description: "Write a function that joins all elements of an array into a string using a specified separator.",
    category: "Beginner Basics",
    inputs: [
      { id: "arr", label: "Array (comma-separated)", type: "text", defaultValue: "fire,air,water" },
      { id: "separator", label: "Separator", type: "text", defaultValue: " - " },
    ],
    buttonText: "Join Array",
  },
  {
    id: "find-array-average",
    title: "Calculate Array Average",
    description: "Write a function that calculates the average of all numbers in an array.",
    category: "Beginner Basics",
    inputs: [{ id: "arr", label: "Array of numbers (comma-separated)", type: "text", defaultValue: "10, 20, 30, 40, 50" }],
    buttonText: "Calculate Average",
  },
  {
    id: "absolute-value",
    title: "Get Absolute Value",
    description: "Write a function that returns the absolute value of a number using `Math.abs()`.",
    category: "Beginner Basics",
    inputs: [{ id: "num", label: "Number", type: "number", defaultValue: -10 }],
    buttonText: "Get Absolute",
  },
  {
    id: "round-number-up",
    title: "Round Number Up",
    description: "Write a function that rounds a number up to the next largest integer using `Math.ceil()`.",
    category: "Beginner Basics",
    inputs: [{ id: "num", label: "Number", type: "number", defaultValue: 4.2 }],
    buttonText: "Round Up",
  },
  {
    id: "round-number-down",
    title: "Round Number Down",
    description: "Write a function that rounds a number down to the nearest integer using `Math.floor()`.",
    category: "Beginner Basics",
    inputs: [{ id: "num", label: "Number", type: "number", defaultValue: 4.8 }],
    buttonText: "Round Down",
  },
  {
    id: "round-to-nearest",
    title: "Round to Nearest Integer",
    description: "Write a function that rounds a number to the nearest integer using `Math.round()`.",
    category: "Beginner Basics",
    inputs: [{ id: "num", label: "Number", type: "number", defaultValue: 4.5 }],
    buttonText: "Round",
  },
  {
    id: "random-integer-in-range",
    title: "Random Integer in Range",
    description: "Write a function that generates a random integer between a min and max value (inclusive).",
    category: "Beginner Basics",
    inputs: [
      { id: "min", label: "Minimum Value", type: "number", defaultValue: 1 },
      { id: "max", label: "Maximum Value", type: "number", defaultValue: 10 },
    ],
    buttonText: "Generate Random",
  },
  {
    id: "string-starts-with",
    title: "Check if String Starts With",
    description: "Write a function that checks if a string starts with a specific substring.",
    category: "Beginner Basics",
    inputs: [
      { id: "str", label: "String", type: "text", defaultValue: "Hello world" },
      { id: "subStr", label: "Substring to check", type: "text", defaultValue: "Hello" },
    ],
    buttonText: "Check Start",
  },
  {
    id: "string-trim",
    title: "Trim Whitespace",
    description: "Write a function that removes whitespace from both the beginning and end of a string.",
    category: "Beginner Basics",
    inputs: [{ id: "str", label: "String with whitespace", type: "text", defaultValue: "   Hello World   " }],
    buttonText: "Trim",
  },
  {
    id: "string-replace-first",
    title: "Replace First Occurrence in String",
    description: "Write a function that replaces the first occurrence of a substring with a new substring.",
    category: "Beginner Basics",
    inputs: [
      { id: "str", label: "Original String", type: "text", defaultValue: "The quick brown fox jumps over the lazy dog." },
      { id: "target", label: "Word to replace", type: "text", defaultValue: "fox" },
      { id: "replacement", label: "New word", type: "text", defaultValue: "cat" },
    ],
    buttonText: "Replace",
  },
  {
    id: "string-split",
    title: "Split String into Array",
    description: "Write a function that splits a sentence into an array of words.",
    category: "Beginner Basics",
    inputs: [{ id: "str", label: "Sentence", type: "text", defaultValue: "JavaScript is fun" }],
    buttonText: "Split",
  },
  {
    id: "array-push",
    title: "Add Element to End of Array",
    description: "Write a function that adds a new element to the end of an array using `.push()`.",
    category: "Beginner Basics",
    inputs: [
      { id: "arr", label: "Array (comma-separated)", type: "text", defaultValue: "1,2,3" },
      { id: "element", label: "Element to add", type: "number", defaultValue: 4 },
    ],
    buttonText: "Push Element",
  },
  {
    id: "array-pop",
    title: "Remove Element from End of Array",
    description: "Write a function that removes and returns the last element of an array using `.pop()`.",
    category: "Beginner Basics",
    inputs: [{ id: "arr", label: "Array (comma-separated)", type: "text", defaultValue: "1,2,3,4" }],
    buttonText: "Pop Element",
  },
  {
    id: "array-shift",
    title: "Remove Element from Start of Array",
    description: "Write a function that removes and returns the first element of an array using `.shift()`.",
    category: "Beginner Basics",
    inputs: [{ id: "arr", label: "Array (comma-separated)", type: "text", defaultValue: "1,2,3,4" }],
    buttonText: "Shift Element",
  },
  {
    id: "array-unshift",
    title: "Add Element to Start of Array",
    description: "Write a function that adds a new element to the beginning of an array using `.unshift()`.",
    category: "Beginner Basics",
    inputs: [
      { id: "arr", label: "Array (comma-separated)", type: "text", defaultValue: "2,3,4" },
      { id: "element", label: "Element to add", type: "number", defaultValue: 1 },
    ],
    buttonText: "Unshift Element",
  },
  {
    id: "array-includes",
    title: "Check if Array Includes Value",
    description: "Write a function that checks if an array contains a certain value.",
    category: "Beginner Basics",
    inputs: [
      { id: "arr", label: "Array (comma-separated)", type: "text", defaultValue: "apple,banana,cherry" },
      { id: "value", label: "Value to check for", type: "text", defaultValue: "banana" },
    ],
    buttonText: "Check Value",
  },
  {
    id: "array-index-of",
    title: "Find Index of Element in Array",
    description: "Write a function that finds the index of the first occurrence of a specified element in an array.",
    category: "Beginner Basics",
    inputs: [
      { id: "arr", label: "Array (comma-separated)", type: "text", defaultValue: "apple,banana,cherry,banana" },
      { id: "value", label: "Value to find", type: "text", defaultValue: "banana" },
    ],
    buttonText: "Find Index",
  },
  {
    id: "array-slice",
    title: "Create Subarray with `.slice()`",
    description: "Write a function that creates a new array containing a portion of an existing array.",
    category: "Beginner Basics",
    inputs: [
      { id: "arr", label: "Array (comma-separated)", type: "text", defaultValue: "a,b,c,d,e" },
      { id: "start", label: "Start Index", type: "number", defaultValue: 1 },
      { id: "end", label: "End Index (exclusive)", type: "number", defaultValue: 3 },
    ],
    buttonText: "Slice Array",
  },
  {
    id: "do-while-loop",
    title: "Do...While Loop",
    description: "Use a `do...while` loop to create a countdown that executes at least once, even if the condition is initially false.",
    category: "Beginner Basics",
    inputs: [{ id: "num", label: "Start Countdown from", type: "number", defaultValue: 3 }],
    buttonText: "Run Loop",
  },
  {
    id: "for-of-loop-array",
    title: "Iterate with `for...of` Loop",
    description: "Use a `for...of` loop to iterate over the values in an array and create a new string.",
    category: "Beginner Basics",
    inputs: [{ id: "arr", label: "Array (comma-separated)", type: "text", defaultValue: "JS,is,great" }],
    buttonText: "Iterate",
  },
  {
    id: "is-nan-check",
    title: "Check for NaN",
    description: "Write a function that checks if a value is `NaN` (Not-a-Number).",
    category: "Beginner Basics",
    inputs: [{ id: "value", label: "Value to check", type: "text", defaultValue: "hello" }],
    buttonText: "Check NaN",
  },
  {
    id: "check-truthy",
    title: "Check for Truthiness",
    description: "Write a function that returns `true` if a value is 'truthy' and `false` if it is 'falsy'.",
    category: "Beginner Basics",
    inputs: [{ id: "value", label: "Value to check", type: "text", defaultValue: "0" }],
    buttonText: "Check Truthy/Falsy",
  },
  {
    id: "get-square-root",
    title: "Get Square Root",
    description: "Write a function to calculate the square root of a number using `Math.sqrt()`.",
    category: "Beginner Basics",
    inputs: [{ id: "num", label: "Number", type: "number", defaultValue: 16 }],
    buttonText: "Calculate Square Root",
  },
  {
    id: "get-current-year",
    title: "Get Current Year",
    description: "Write a function that returns the current four-digit year.",
    category: "Beginner Basics",
    inputs: [],
    buttonText: "Get Year",
  },
  {
    id: "template-literal-expression",
    title: "Template Literal with Expression",
    description: "Use a template literal to create a string that includes the result of an arithmetic expression.",
    category: "Beginner Basics",
    inputs: [
      { id: "a", label: "Number A", type: "number", defaultValue: 5 },
      { id: "b", label: "Number B", type: "number", defaultValue: 10 },
    ],
    buttonText: "Create String",
  },
  {
    id: "char-at-index",
    title: "Get Character at Index",
    description: "Write a function to get the character at a specific index in a string using `.charAt()`.",
    category: "Beginner Basics",
    inputs: [
      { id: "str", label: "String", type: "text", defaultValue: "JavaScript" },
      { id: "index", label: "Index", type: "number", defaultValue: 4 },
    ],
    buttonText: "Get Character",
  },
  {
    id: "create-object",
    title: "Create a Simple Object",
    description: "Create an object literal representing a book with title and author properties.",
    category: "Beginner Basics",
    inputs: [],
    buttonText: "Create Book Object",
  },
  {
    id: "access-object-property",
    title: "Access Object Property",
    description: "Given an object representing a person, access their age.",
    category: "Beginner Basics",
    inputs: [],
    buttonText: "Get Age",
  },
  {
    id: "modify-object-property",
    title: "Modify Object Property",
    description: "Given an object representing a product, update its price.",
    category: "Beginner Basics",
    inputs: [{ id: "price", label: "New Price", type: "number", defaultValue: 12.99 }],
    buttonText: "Update Price",
  },
  {
    id: "add-object-property",
    title: "Add Object Property",
    description: "Add a new property `inStock` with a boolean value to a product object.",
    category: "Beginner Basics",
    inputs: [],
    buttonText: "Add Property",
  },
  {
    id: "nested-if-statement",
    title: "Nested If Statement",
    description: "Write a function that checks if a number is positive and then checks if it is even.",
    category: "Beginner Basics",
    inputs: [{ id: "num", label: "Number", type: "number", defaultValue: 10 }],
    buttonText: "Check Number",
  },
  {
    id: "switch-with-fallthrough",
    title: "Switch with Fall-through",
    description: "Use a switch statement where multiple cases execute the same code block (fall-through).",
    category: "Beginner Basics",
    inputs: [{ id: "day", label: "Day of the week", type: "text", defaultValue: "Saturday" }],
    buttonText: "Check if Weekend",
  },
  {
    id: "string-to-integer",
    title: "Convert String to Integer",
    description: "Write a function that converts a string to a whole number using `parseInt()`.",
    category: "Beginner Basics",
    inputs: [{ id: "str", label: "String Number", type: "text", defaultValue: "123.45" }],
    buttonText: "Parse Integer",
  },
  {
    id: "for-loop-break",
    title: "Break a For Loop",
    description: "Use the `break` statement to exit a `for` loop early when a specific condition is met.",
    category: "Beginner Basics",
    inputs: [{ id: "arr", label: "Array of Numbers", type: "text", defaultValue: "1,2,3,4,5,6" }],
    buttonText: "Find first number > 3",
  },
  {
    id: "for-loop-continue",
    title: "Continue in a For Loop",
    description: "Use the `continue` statement to skip the current iteration of a loop and move to the next.",
    category: "Beginner Basics",
    inputs: [{ id: "arr", label: "Array of Numbers", type: "text", defaultValue: "1,2,3,4,5" }],
    buttonText: "Sum only odd numbers",
  },
  {
    id: "array-concat",
    title: "Concatenate Two Arrays",
    description: "Combine two arrays into a new single array using the `.concat()` method.",
    category: "Beginner Basics",
    inputs: [
      { id: "arr1", label: "First Array", type: "text", defaultValue: "a,b" },
      { id: "arr2", label: "Second Array", type: "text", defaultValue: "c,d" },
    ],
    buttonText: "Concatenate",
  },
  {
    id: "string-last-index-of",
    title: "Find Last Index of Substring",
    description: "Find the index of the last occurrence of a substring in a string.",
    category: "Beginner Basics",
    inputs: [
      { id: "str", label: "String", type: "text", defaultValue: "canal" },
      { id: "subStr", label: "Substring to find", type: "text", defaultValue: "a" },
    ],
    buttonText: "Find Last Index",
  },
  {
    id: "number-to-fixed",
    title: "Format Number to Fixed Decimals",
    description: "Format a number to a specific number of decimal places, returning a string representation.",
    category: "Beginner Basics",
    inputs: [
      { id: "num", label: "Number", type: "number", defaultValue: 3.14159 },
      { id: "decimals", label: "Decimal Places", type: "number", defaultValue: 2 },
    ],
    buttonText: "Format Number",
  },
  {
    id: "for-in-loop-object",
    title: "Iterate Object with `for...in`",
    description: "Use a `for...in` loop to iterate over the properties of an object.",
    category: "Beginner Basics",
    inputs: [],
    buttonText: "Iterate Properties",
  },
  {
    id: "create-array",
    title: "Create a Simple Array",
    description: "Create an array literal containing three different colors as strings.",
    category: "Beginner Basics",
    inputs: [],
    buttonText: "Create Array",
  },
  {
    id: "array-reverse",
    title: "Reverse an Array",
    description: "Reverse the order of elements in an array in place using the `.reverse()` method.",
    category: "Beginner Basics",
    inputs: [{ id: "arr", label: "Array", type: "text", defaultValue: "1,2,3,4" }],
    buttonText: "Reverse",
  },
  {
    id: "simple-type-coercion",
    title: "Type Coercion Example",
    description: "Demonstrate JavaScript's type coercion by adding a number to a string.",
    category: "Beginner Basics",
    inputs: [],
    buttonText: "Show Coercion",
  }
];
