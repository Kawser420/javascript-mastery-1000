import { Problem } from '../../types';

export const problems: Problem[] = [
  {
    id: 'say-hello',
    title: 'Say Hello',
    description: 'Write a function that takes a name as a string and returns a greeting message.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'name', label: 'Name', type: 'text', placeholder: 'Enter a name', defaultValue: 'World' },
    ],
    buttonText: 'Greet',
  },
  {
    id: 'sum-two-numbers',
    title: 'Sum Two Numbers',
    description: 'Write a function that takes two numbers as input and returns their sum.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'num1', label: 'First Number', type: 'number', placeholder: 'Enter a number', defaultValue: 5 },
      { id: 'num2', label: 'Second Number', type: 'number', placeholder: 'Enter another number', defaultValue: 10 },
    ],
    buttonText: 'Calculate Sum',
  },
  {
    id: 'subtract-numbers',
    title: 'Subtract Two Numbers',
    description: 'Write a function that takes two numbers and returns the result of subtracting the second from the first.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'num1', label: 'First Number', type: 'number', defaultValue: 20 },
      { id: 'num2', label: 'Second Number', type: 'number', defaultValue: 8 },
    ],
    buttonText: 'Subtract',
  },
  {
    id: 'simple-multiplication',
    title: 'Multiply Two Numbers',
    description: 'Write a function that takes two numbers and returns their product.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'num1', label: 'First Number', type: 'number', placeholder: 'Enter a number', defaultValue: 7 },
      { id: 'num2', label: 'Second Number', type: 'number', placeholder: 'Enter another number', defaultValue: 6 },
    ],
    buttonText: 'Multiply',
  },
   {
    id: 'simple-division',
    title: 'Divide Two Numbers',
    description: 'Write a function that divides the first number by the second. Handle division by zero.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'num1', label: 'Dividend', type: 'number', placeholder: 'Enter a number', defaultValue: 100 },
      { id: 'num2', label: 'Divisor', type: 'number', placeholder: 'Enter another number', defaultValue: 10 },
    ],
    buttonText: 'Divide',
  },
  {
    id: 'find-remainder',
    title: 'Find the Remainder',
    description: 'Write a function that finds the remainder of a division using the modulo operator (%).',
    category: 'Beginner Basics',
    inputs: [
        { id: 'dividend', label: 'Dividend', type: 'number', defaultValue: 10 },
        { id: 'divisor', label: 'Divisor', type: 'number', defaultValue: 3 },
    ],
    buttonText: 'Find Remainder',
  },
  {
    id: 'exponentiation',
    title: 'Exponentiation',
    description: 'Calculate the result of a number raised to the power of another number.',
    category: 'Beginner Basics',
    inputs: [
        { id: 'base', label: 'Base', type: 'number', defaultValue: 2 },
        { id: 'exponent', label: 'Exponent', type: 'number', defaultValue: 3 },
    ],
    buttonText: 'Calculate Power',
  },
  {
    id: 'increment-number',
    title: 'Increment a Number',
    description: 'Write a function that takes a number and returns the number incremented by 1.',
    category: 'Beginner Basics',
    inputs: [
        { id: 'num', label: 'Number', type: 'number', defaultValue: 5 },
    ],
    buttonText: 'Increment',
  },
  {
    id: 'decrement-number',
    title: 'Decrement a Number',
    description: 'Write a function that takes a number and returns the number decremented by 1.',
    category: 'Beginner Basics',
    inputs: [
        { id: 'num', label: 'Number', type: 'number', defaultValue: 5 },
    ],
    buttonText: 'Decrement',
  },
  {
    id: 'string-length',
    title: 'Get String Length',
    description: 'Write a function to find the number of characters in a given string.',
    category: 'Beginner Basics',
    inputs: [
        { id: 'str', label: 'Your String', type: 'text', defaultValue: 'JavaScript' },
    ],
    buttonText: 'Get Length',
  },
  {
    id: 'get-first-character',
    title: 'Get First Character',
    description: 'Write a function to get the first character of a string.',
    category: 'Beginner Basics',
    inputs: [
        { id: 'str', label: 'String', type: 'text', defaultValue: 'Hello' },
    ],
    buttonText: 'Get First Char',
  },
  {
    id: 'get-last-character',
    title: 'Get Last Character',
    description: 'Write a function to get the last character of a string.',
    category: 'Beginner Basics',
    inputs: [
        { id: 'str', label: 'String', type: 'text', defaultValue: 'World' },
    ],
    buttonText: 'Get Last Char',
  },
  {
    id: 'concatenate-strings',
    title: 'Concatenate Strings',
    description: 'Write a function that combines two strings into one.',
    category: 'Beginner Basics',
    inputs: [
        { id: 'str1', label: 'First String', type: 'text', defaultValue: 'Hello, ' },
        { id: 'str2', label: 'Second String', type: 'text', defaultValue: 'World!' },
    ],
    buttonText: 'Combine',
  },
  {
    id: 'number-to-string',
    title: 'Convert Number to String',
    description: 'Write a function that explicitly converts a number to its string representation.',
    category: 'Beginner Basics',
    inputs: [
        { id: 'num', label: 'Number', type: 'number', defaultValue: 123 },
    ],
    buttonText: 'Convert',
  },
  {
    id: 'string-to-number',
    title: 'Convert String to Number',
    description: 'Write a function that converts a string representation of a number into an actual number.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'str', label: 'String Number', type: 'text', defaultValue: '45.5' },
    ],
    buttonText: 'Convert to Number',
  },
  {
    id: 'get-data-type',
    title: 'Get Data Type',
    description: 'Write a function that takes any value and returns its data type using the `typeof` operator.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'value', label: 'Input Value', type: 'text', defaultValue: 'hello' },
    ],
    buttonText: 'Get Type',
  },
  {
    id: 'boolean-true-false',
    title: 'Return a Boolean',
    description: 'Write a function that returns the boolean value `true`.',
    category: 'Beginner Basics',
    inputs: [],
    buttonText: 'Return True',
  },
  {
    id: 'strict-equality',
    title: 'Strict Equality (===)',
    description: 'Compare two values for strict equality (both value and type must match).',
    category: 'Beginner Basics',
    inputs: [
      { id: 'val1', label: 'Value 1', type: 'text', defaultValue: '5' },
      { id: 'val2', label: 'Value 2', type: 'text', defaultValue: '5' },
    ],
    buttonText: 'Compare ===',
  },
  {
    id: 'loose-equality',
    title: 'Loose Equality (==)',
    description: 'Compare two values for loose equality (values are coerced to the same type before comparison).',
    category: 'Beginner Basics',
    inputs: [
      { id: 'val1', label: 'Value 1', type: 'text', defaultValue: '5' },
      { id: 'val2', label: 'Value 2', type: 'text', defaultValue: '5' },
    ],
    buttonText: 'Compare ==',
  },
  {
    id: 'is-greater-than',
    title: 'Greater Than Operator',
    description: 'Write a function that returns true if the first number is greater than the second, and false otherwise.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'num1', label: 'First Number', type: 'number', defaultValue: 10 },
      { id: 'num2', label: 'Second Number', type: 'number', defaultValue: 5 },
    ],
    buttonText: 'Check >',
  },
  {
    id: 'logical-and',
    title: 'Logical AND (&&)',
    description: 'Write a function that checks if a person is old enough AND has a license to drive.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'age', label: 'Age', type: 'number', defaultValue: 20 },
      { id: 'hasLicense', label: 'Has License? (true/false)', type: 'text', defaultValue: 'true' },
    ],
    buttonText: 'Check Eligibility',
  },
  {
    id: 'logical-or',
    title: 'Logical OR (||)',
    description: 'Write a function that checks if a user is either an Admin OR the content owner to allow editing.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'isAdmin', label: 'Is Admin? (true/false)', type: 'text', defaultValue: 'false' },
      { id: 'isOwner', label: 'Is Owner? (true/false)', type: 'text', defaultValue: 'true' },
    ],
    buttonText: 'Check Permission',
  },
  {
    id: 'logical-not',
    title: 'Logical NOT (!)',
    description: 'Write a function that inverts a boolean value using the NOT operator.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'value', label: 'Input Boolean (true/false)', type: 'text', defaultValue: 'true' },
    ],
    buttonText: 'Invert Value',
  },
  {
    id: 'check-is-even',
    title: 'Check if Number is Even',
    description: 'Write a function that takes a number and returns true if it is even, and false otherwise.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'num', label: 'Number', type: 'number', placeholder: 'Enter a number', defaultValue: 8 },
    ],
    buttonText: 'Check Even/Odd',
  },
  {
    id: 'simple-if-else',
    title: 'Check Voting Age',
    description: 'Write a function that returns "Can vote" if age is 18 or over, and "Cannot vote" otherwise.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'age', label: 'Age', type: 'number', placeholder: 'Enter an age', defaultValue: 21 },
    ],
    buttonText: 'Check Eligibility',
  },
  {
    id: 'check-is-positive',
    title: 'Check Positive, Negative, or Zero',
    description: 'Write a function to check if a number is positive, negative, or zero.',
    category: 'Beginner Basics',
    inputs: [
        { id: 'num', label: 'Number', type: 'number', defaultValue: -5 },
    ],
    buttonText: 'Check Number',
  },
  {
    id: 'grade-calculator',
    title: 'Simple Grade Calculator',
    description: 'Assign a letter grade (A, B, C, D, F) based on a score using if-else if-else.',
    category: 'Beginner Basics',
    inputs: [
        { id: 'score', label: 'Score (0-100)', type: 'number', defaultValue: 85 },
    ],
    buttonText: 'Calculate Grade',
  },
  {
    id: 'ternary-operator-check',
    title: 'Check with Ternary Operator',
    description: 'Use the ternary operator to check if a user is logged in and return an appropriate message.',
    category: 'Beginner Basics',
    inputs: [
        { id: 'isLoggedIn', label: 'Is Logged In? (true/false)', type: 'text', defaultValue: 'true' },
    ],
    buttonText: 'Check Status',
  },
  {
    id: 'is-leap-year',
    title: 'Check for Leap Year',
    description: 'Write a function to determine if a given year is a leap year. A year is a leap year if it is divisible by 4, except for end-of-century years, which must be divisible by 400.',
    category: 'Beginner Basics',
    inputs: [
        { id: 'year', label: 'Year', type: 'number', defaultValue: 2024 },
    ],
    buttonText: 'Check Year',
  },
  {
    id: 'max-of-three',
    title: 'Find the Largest of Three Numbers',
    description: 'Write a function that takes three numbers and returns the largest one.',
    category: 'Beginner Basics',
    inputs: [
        { id: 'num1', label: 'First Number', type: 'number', defaultValue: 10 },
        { id: 'num2', label: 'Second Number', type: 'number', defaultValue: 25 },
        { id: 'num3', label: 'Third Number', type: 'number', defaultValue: 15 },
    ],
    buttonText: 'Find Largest',
  },
  {
    id: 'switch-statement-day',
    title: 'Day of the Week',
    description: 'Use a switch statement to return the day of the week from a number (1=Sunday, 2=Monday, etc.).',
    category: 'Beginner Basics',
    inputs: [
        { id: 'dayNum', label: 'Day Number (1-7)', type: 'number', defaultValue: 3 },
    ],
    buttonText: 'Get Day',
  },
  {
    id: 'simple-for-loop',
    title: 'Simple For Loop',
    description: 'Use a for loop to create a string of numbers from 0 up to (but not including) a given number, separated by dashes.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'num', label: 'Loop until', type: 'number', placeholder: 'Enter a number', defaultValue: 5 },
    ],
    buttonText: 'Generate Sequence',
  },
  {
    id: 'for-loop-sum',
    title: 'Sum Numbers with a For Loop',
    description: 'Use a for loop to calculate the sum of all numbers from 1 up to a given number.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'num', label: 'Sum up to', type: 'number', defaultValue: 10 },
    ],
    buttonText: 'Calculate Sum',
  },
  {
    id: 'for-loop-countdown',
    title: 'Countdown with a For Loop',
    description: 'Use a for loop to generate a countdown string from a given number down to 1.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'start', label: 'Start Countdown from', type: 'number', defaultValue: 5 },
    ],
    buttonText: 'Start Countdown',
  },
  {
    id: 'simple-while-loop',
    title: 'Simple While Loop',
    description: 'Use a while loop to generate a string of numbers, incrementing by 2, until the number is greater than 10.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'start', label: 'Start Number', type: 'number', defaultValue: 0 },
    ],
    buttonText: 'Run While Loop',
  },
  {
    id: 'access-array-element',
    title: 'Access Array Element',
    description: 'Write a function that returns the element at a specific index from an array.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'arr', label: 'Array (comma-separated)', type: 'text', defaultValue: 'apple,banana,cherry' },
      { id: 'index', label: 'Index to Access', type: 'number', defaultValue: 1 },
    ],
    buttonText: 'Get Element',
  },
  {
    id: 'get-array-length',
    title: 'Get Array Length',
    description: 'Write a function that returns the total number of elements in an array.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'arr', label: 'Array (comma-separated)', type: 'text', defaultValue: 'a,b,c,d' },
    ],
    buttonText: 'Get Length',
  },
  {
    id: 'string-to-uppercase',
    title: 'Convert String to Uppercase',
    description: 'Write a function that converts an entire string to its uppercase equivalent.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'str', label: 'Input String', type: 'text', defaultValue: 'hello world' },
    ],
    buttonText: 'To Uppercase',
  },
  {
    id: 'string-to-lowercase',
    title: 'Convert String to Lowercase',
    description: 'Write a function that converts an entire string to its lowercase equivalent.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'str', label: 'Input String', type: 'text', defaultValue: 'HELLO WORLD' },
    ],
    buttonText: 'To Lowercase',
  },
  {
    id: 'string-includes',
    title: 'Check if String Includes Substring',
    description: 'Write a function that checks if a string contains a specific substring.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'mainStr', label: 'Main String', type: 'text', defaultValue: 'The quick brown fox' },
      { id: 'subStr', label: 'Substring to Find', type: 'text', defaultValue: 'quick' },
    ],
    buttonText: 'Check for Substring',
  },
  {
    id: 'area-of-rectangle',
    title: 'Area of a Rectangle',
    description: 'Write a function that calculates the area of a rectangle given its width and height.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'width', label: 'Width', type: 'number', defaultValue: 10 },
      { id: 'height', label: 'Height', type: 'number', defaultValue: 5 },
    ],
    buttonText: 'Calculate Area',
  },
  {
    id: 'celsius-to-fahrenheit',
    title: 'Celsius to Fahrenheit',
    description: 'Write a function to convert a temperature from Celsius to Fahrenheit. Formula: (C * 9/5) + 32.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'celsius', label: 'Temperature in Celsius', type: 'number', defaultValue: 20 },
    ],
    buttonText: 'Convert',
  },
  {
    id: 'fahrenheit-to-celsius',
    title: 'Fahrenheit to Celsius',
    description: 'Write a function to convert a temperature from Fahrenheit to Celsius. Formula: (F - 32) * 5/9.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'fahrenheit', label: 'Temperature in Fahrenheit', type: 'number', defaultValue: 68 },
    ],
    buttonText: 'Convert',
  },
  {
    id: 'check-null',
    title: 'Check for Null',
    description: 'Write a function that checks if a given value is `null`.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'value', label: 'Input value (try typing "null")', type: 'text', defaultValue: 'hello' },
    ],
    buttonText: 'Check Null',
  },
  {
    id: 'check-undefined',
    title: 'Check for Undefined',
    description: 'Write a function that checks if a given value is `undefined`.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'value', label: 'Input value (try typing "undefined")', type: 'text', defaultValue: '123' },
    ],
    buttonText: 'Check Undefined',
  },
  {
    id: 'string-repeat',
    title: 'Repeat a String',
    description: 'Write a function that repeats a string a specified number of times.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'str', label: 'String to Repeat', type: 'text', defaultValue: 'abc' },
      { id: 'count', label: 'Number of Times', type: 'number', defaultValue: 3 },
    ],
    buttonText: 'Repeat',
  },
  {
    id: 'string-slicing',
    title: 'Slice a String',
    description: 'Write a function that extracts a portion of a string using `slice()`.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'str', label: 'Original String', type: 'text', defaultValue: 'JavaScript' },
      { id: 'start', label: 'Start Index', type: 'number', defaultValue: 0 },
      { id: 'end', label: 'End Index (exclusive)', type: 'number', defaultValue: 4 },
    ],
    buttonText: 'Slice String',
  },
  {
    id: 'array-join',
    title: 'Join Array Elements',
    description: 'Write a function that joins all elements of an array into a string using a specified separator.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'arr', label: 'Array (comma-separated)', type: 'text', defaultValue: 'fire,air,water' },
      { id: 'separator', label: 'Separator', type: 'text', defaultValue: ' - ' },
    ],
    buttonText: 'Join Array',
  },
  {
    id: 'find-array-average',
    title: 'Calculate Array Average',
    description: 'Write a function that calculates the average of all numbers in an array.',
    category: 'Beginner Basics',
    inputs: [
      { id: 'arr', label: 'Array of numbers (comma-separated)', type: 'text', defaultValue: '10, 20, 30, 40, 50' },
    ],
    buttonText: 'Calculate Average',
  },
];
